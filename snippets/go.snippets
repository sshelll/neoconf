extends all

snippet fmtp "fmt.Println"
	fmt.Println("${1}")

snippet fmtpf "fmt.Printf"
	fmt.Printf("${1:format}", ${2})

snippet fmtf "fmt.Fprintf"
	fmt.Fprintf(${1:io.Writer}, "${2:format}", ${3})

snippet fmts "fmt.Sprintf"
	fmt.Sprintf("${1:format}", ${2})

snippet log "log.Println"
	log.Println("${1}")

snippet logf "log.Printf"
	log.Printf("${1:format}", ${2})

snippet gofunc "go func"
	go func() {
		${1}
	}()

snippet deferfunc "defer func"
	defer func() {
		${1}
	}()

snippet deferrecover "defer func() { recover() }"
	defer func() {
		if r := recover(); r != nil {
			${1}
		}
	}()

snippet recover "recover()"
	if r := recover(); r != nil {
		${1}
	}

snippet vars "var ()"
	var (
		${1}
	)

snippet consts "const ()"
	const (
		${1}
	)

snippet inter "interface{}"
	interface{}

snippet main "func main"
	func main() {
		${1}
	}

snippet test "func Test"
	func Test${1}(t *testing.T) {
		${2}
	}

snippet iferr "if err != nil"
	if err != nil {
		${1}
	}

snippet ifok "if _, ok := ${1}; ok"
	if _, ok := ${1}; ok {
		${2}
	}

snippet ifnotok "if _, ok := ${1}; !ok"
	if _, ok := ${1}; !ok {
		${2}
	}

snippet ifreturn "if err != nil { return }"
	if err != nil {
		return
	}

snippet fori "for i := 0; i < ${1:10}; i++"
	for i := 0; i < ${1:10}; i++ {
		${2}
	}

snippet bytes "[]byte"
	[]byte(${1})
